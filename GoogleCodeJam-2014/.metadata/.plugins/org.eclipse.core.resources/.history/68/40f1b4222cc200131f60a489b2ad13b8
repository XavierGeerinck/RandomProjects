import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;


public class Main {
	public static void main(String[] args) throws FileNotFoundException {
		// Configurate
		String inputFile = "./S1.in";
		String outputFile = "./S1.out";
		
		// Open reader and writer
		Scanner scanner = new Scanner(new File(inputFile));
		PrintWriter pw = new PrintWriter(new File(outputFile));
		
		// Get number of tests
		int numberOfTests = scanner.nextInt();
		scanner.nextLine();
		
		// Solve the tests
		for (int i = 0; i < numberOfTests; i++) {
			pw.println(_solve(scanner, i + 1, numberOfTests));
		}
		
		// Close the reader and the writer
		scanner.close();
		pw.flush();
	}

	private static String _solve(Scanner scanner, int testNumber, int numberOfTests) {
		int rowWidth = 4;
		int rowHeight = 4;
		
		// Read Lines
		int firstAnswer = scanner.nextInt();
		scanner.nextLine();
		
		String[] rowPicked1 = new String[4];
		for (int i = 0; i < rowHeight; i++) {
			String line = scanner.nextLine();
			
			// Save it if the chosen row
			if ((i + 1) == firstAnswer) {
				rowPicked1 = line.split(" ");
			}
		}
		
		int secondAnswer = scanner.nextInt();
		scanner.nextLine();
		
		String[] rowPicked2 = new String[4];
		for (int i = 0; i < rowHeight; i++) {
			String line = scanner.nextLine();
			
			// Save it if the chosen row
			if ((i + 1) == secondAnswer) {
				rowPicked2 = line.split(" ");
			}
		}
		
		// Determine the result
		List<String> result = _getRowDiff(Arrays.asList(rowPicked1), Arrays.asList(rowPicked2));
		String calculatedResult = _calculateResult(result, testNumber);
		System.out.println(calculatedResult);
		return calculatedResult;
	}
	
	/**
	 * Prints the result
	 * 
	 * Single Card To Be Chosen ==> Output Card
	 * Multiple Cards To Be Chosen ==> Output "Bad magician!"
	 * No Cards To Be Chosen ==> Output "Volunteer cheated!"
	 * 
	 * @param result
	 * @param testNumber
	 */
	private static String _calculateResult(List<String> result, int testNumber) {
		if (result.size() > 1) {
			return String.format("Case #%d: %s", testNumber, "Bad magician!");
		} else if (result.size() == 1) {
			return String.format("Case #%d: %s", testNumber, result.get(0));
		} else {
			return String.format("Case #%d: %s", testNumber, "Volunteer cheated!");
		}
	}

	private static List<String> _getRowDiff(List<String> rowPicked1, List<String> rowPicked2) {
		List<String> result = new ArrayList<String>();
		
		for (int i = 0; i < rowPicked1.size(); i++) {
			if (rowPicked2.contains(rowPicked1.get(i))) {
				result.add(rowPicked1.get(i));
			}
		}
		
		return result;
	}
}
